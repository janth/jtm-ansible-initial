---
# vim:sw=2
- name: Debug messages
  debug:
    msg:
      # - "System {{ inventory_hostname }} has uuid {{ ansible_product_uuid }}"
      - "{{ beskjed }}"
      - "{{ melding.apt }}"
  when:
    - ( ansible_facts['distribution'] == "Ubuntu" and Debug == True )
  tags:
    - msg

- name: base | Install locales
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ locales }}"
  tags:
    - locales
  ignore_errors: yes

# - name: Debug messages
#   debug:
#     msg: "aptinst {{ item }}"
#   when:
#     - ansible_facts['distribution'] == "Ubuntu"
#   with_items:
#     - "{{ packages.apt }}"
#   tags:
#     - msg

# Install packages
- name: Base | Install apt packages
  apt:
    name: "{{ packages.apt }}"
  when: ( ansible_facts['distribution'] == "Ubuntu" and skip_basepkgs is undefined )
  # loop: "{{ packages.apt }}"
  tags:
    - pkg
  # ignore_errors: yes

- name: Base | Install snap packages
  snap:
    name: "{{ packages.snap }}"
  when:
    - ansible_facts['distribution'] == "Ubuntu"
  # loop: "{{ packages.snap }}"
  tags:
    - pkg
  ignore_errors: yes

- name: Base | Install snap classic packages
  snap:
    name: "{{ item }}"
    classic: yes
  when:
    - ansible_facts['distribution'] == "Ubuntu"
  loop: "{{ packages.snap_classic }}"
  tags:
    - pkg
  ignore_errors: yes

- name: Base | set vim as default editor
  alternatives:
    name: editor
    path: /usr/bin/vim.nox
  when: ansible_facts['distribution'] == "Ubuntu"
  tags:
    - editor

# - name: Base | set vim as default editor
#   command: update-alternatives --set editor /usr/bin/vim.nox
#   creates: /usr/bin/vim.nox
#   tags:
#     - vim

- name: Base | configure timezone
  timezone:
    name: "{{ timezone }}"
  tags:
    - tz

# - name: Base | configure timezone
#   copy: content={{ timezone }} dest=/etc/timezone owner=root group=root mode=644 backup=yes
#   notify: b_hdl update timezone
#   tags:
#     - tz
#
# - name: Base | configure localtime
#   file: src=/usr/share/zoneinfo/{{ timezone }} dest=/etc/localtime owner=root group=root mode=644 state=link force=yes backup=yes
#   tags:
#     - tz

# - name: display post install message
#   debug: msg={{ post_install.split('\n') }}


# sudo add-apt-repository ppa:pi-rho/dev
# sudo apt-get update
# sudo apt-get install tmux-next
#
# wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
# sudo add-apt-repository "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib"
# sudo apt update && sudo apt install virtualbox-6.0


